using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ProtoMsg;
using MobaServer;


public class DBclassname : DBBase<DBclassname>
{
    //查询 根据条件返回实体类
    public classname Select(string sql)
    {

        classname classname = new classname();
        string sqlCmd = "select *from tablename " + sql;

        //查的表明一定是类的名称
        var r = MySqlHelper.SelectCMD("dbtype", sqlCmd);
        if (r.HasRows == false)
        {
            return null;
        }
        else
        {
            if (r.Read())
            {
                //遍历每一行表格 
                //"classname"."字段名称" = r.Get"数据类型("字段名称")";
            }

        }
        return classname;
    }

    //查询 根据ID -> 条件  查询后返回一个类 Single
    public List<classname> SelectList(string sql)
    {
        List<classname> classnameList = new List<classname>();
        
        string sqlCmd= "select *from tablename " + sql;
        //查的表明一定是类的名称
        var r = MySqlHelper.SelectCMD("dbtype", sqlCmd);
        if (r.HasRows == false)
        {
            return null;
        }
        else
        {
            while (r.Read())
            {
                classname classname = new classname();

                //遍历每一行表格 
                //"classname"."字段名称" = r.Get"数据类型("字段名称")";

                classnameList.Add(classname);
            }
        }
        return classnameList;
    }
    
    //删除-key 根据条件删除 
    public bool Delete(string sql)
    {
        string sqlCmd= "delete from tablename " + sql;
        bool b = MySqlHelper.DeleteCMD("dbtype", sqlCmd);

        return b;
    }

    //插入->添加的是一整条的数据  如果有主键  先判断主键是否存在了 返回插入结果 isSingle是否保持唯一性
    public bool Insert(classname classname)
    {
        //ikey需要通过运算获得  
        //ivalue需要通过append
        //string sqlCmd = "insert into tablename("+ikey+") values("+ivalues+")";
		//插入所有字段
        bool b = MySqlHelper.AddCMD("dbtype", sqlCmd);
        return b;
    }

 
    //改 先进行查询 然后再进行修改  返回更新结果
    public bool Update(string setSql,string whereSql)
    {
        if (!string.IsNullOrEmpty(setSql))
        {
            if (setSql[0] == ',')
            {
                setSql = setSql.Remove(0, 1);
            }
        }
        //UPDATE account  set id=115 where id=1 and name="mm"
        string sqlCmd = "UPDATE tablename set " + setSql + " " + whereSql;
        //UPDATE account  set id=115 where(id=1)
        bool b = MySqlHelper.UpdateCMD("dbtype", sqlCmd);
        return b;
    }
}